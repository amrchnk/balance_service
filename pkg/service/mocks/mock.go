// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	models "github.com/amrchnk/balance_service/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockBalance is a mock of Balance interface.
type MockBalance struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceMockRecorder
}

// MockBalanceMockRecorder is the mock recorder for MockBalance.
type MockBalanceMockRecorder struct {
	mock *MockBalance
}

// NewMockBalance creates a new mock instance.
func NewMockBalance(ctrl *gomock.Controller) *MockBalance {
	mock := &MockBalance{ctrl: ctrl}
	mock.recorder = &MockBalanceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalance) EXPECT() *MockBalanceMockRecorder {
	return m.recorder
}

// ChangeUserBalance mocks base method.
func (m *MockBalance) ChangeUserBalance(balance models.Balance, tr_type string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeUserBalance", balance, tr_type)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ChangeUserBalance indicates an expected call of ChangeUserBalance.
func (mr *MockBalanceMockRecorder) ChangeUserBalance(balance, tr_type interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeUserBalance", reflect.TypeOf((*MockBalance)(nil).ChangeUserBalance), balance, tr_type)
}

// GetBalanceById mocks base method.
func (m *MockBalance) GetBalanceById(input models.UserBalanceQuery) (models.UserBalanceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalanceById", input)
	ret0, _ := ret[0].(models.UserBalanceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalanceById indicates an expected call of GetBalanceById.
func (mr *MockBalanceMockRecorder) GetBalanceById(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalanceById", reflect.TypeOf((*MockBalance)(nil).GetBalanceById), input)
}

// TransferMoney mocks base method.
func (m *MockBalance) TransferMoney(input models.TransferQuery) ([]float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransferMoney", input)
	ret0, _ := ret[0].([]float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TransferMoney indicates an expected call of TransferMoney.
func (mr *MockBalanceMockRecorder) TransferMoney(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransferMoney", reflect.TypeOf((*MockBalance)(nil).TransferMoney), input)
}

// MockTransactions is a mock of Transactions interface.
type MockTransactions struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionsMockRecorder
}

// MockTransactionsMockRecorder is the mock recorder for MockTransactions.
type MockTransactionsMockRecorder struct {
	mock *MockTransactions
}

// NewMockTransactions creates a new mock instance.
func NewMockTransactions(ctrl *gomock.Controller) *MockTransactions {
	mock := &MockTransactions{ctrl: ctrl}
	mock.recorder = &MockTransactionsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactions) EXPECT() *MockTransactionsMockRecorder {
	return m.recorder
}

// GetAllTransactions mocks base method.
func (m *MockTransactions) GetAllTransactions(input models.AddressReq) ([]models.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTransactions", input)
	ret0, _ := ret[0].([]models.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTransactions indicates an expected call of GetAllTransactions.
func (mr *MockTransactionsMockRecorder) GetAllTransactions(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTransactions", reflect.TypeOf((*MockTransactions)(nil).GetAllTransactions), input)
}

// GetTransactionByUserId mocks base method.
func (m *MockTransactions) GetTransactionByUserId(id int, input models.AddressReq) ([]models.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionByUserId", id, input)
	ret0, _ := ret[0].([]models.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionByUserId indicates an expected call of GetTransactionByUserId.
func (mr *MockTransactionsMockRecorder) GetTransactionByUserId(id, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionByUserId", reflect.TypeOf((*MockTransactions)(nil).GetTransactionByUserId), id, input)
}
